<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tracy.test.dao.BlogMapper">
	<resultMap id="BaseResultMap" type="com.tracy.test.entity.Blog">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="pub_date" property="pubDate" jdbcType="DATE" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, content, user_id, pub_date
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from blog
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from blog
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tracy.test.entity.Blog">
		insert into blog (id, title, content,
		user_id, pub_date)
		values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER}, #{pubDate,jdbcType=DATE})
	</insert>
	<insert id="insertSelective" parameterType="com.tracy.test.entity.Blog">
		insert into blog
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="pubDate != null">
				pub_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="pubDate != null">
				#{pubDate,jdbcType=DATE},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tracy.test.entity.Blog">
		update blog
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="pubDate != null">
				pub_date = #{pubDate,jdbcType=DATE},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tracy.test.entity.Blog">
		update blog
		set title = #{title,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		pub_date = #{pubDate,jdbcType=DATE}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- <select id="getAllBlog" resultMap="BaseResultMap"> select id, title, 
		content, user_id,pub_date from blog </select> -->


	<!-- 根据blog查询对应的用户信息 -->
	<!-- 方式一: 嵌套结果: 使用嵌套结果映射来处理重复的联合结果的子集 SELECT * FROM blog b, user u WHERE 
		b.user_id=u.id -->
	<select id="getAllBlog" resultMap="BlogUserResultMap">
		SELECT * FROM blog b, user u WHERE b.user_id=u.id
	</select>
	<resultMap type="com.tracy.test.entity.Blog" id="BlogUserResultMap">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="user_id" property="userId" />
		<result column="pub_date" property="pubDate" />
		<!-- association标识了关联对象的属性.property表示属性名.javaType表示具体的类 -->
		<association property="user" javaType="com.tracy.test.entity.User">
			<!-- 和resultMap的配置方法一样,property为具体映射的属性名,column为查询出来的结果名 -->
			<id property="id" column="id" />
			<result property="nickname" column="nickname" />
			<result property="firstName" column="first_name" />
			<result property="lastName" column="last_name" />
		</association>
	</resultMap>




</mapper>